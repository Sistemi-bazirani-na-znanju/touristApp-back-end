package authNewUserRules;
import tourstApp.model.ExcursionType
import java.util.List
import java.util.ArrayList
import tourstApp.model.ExcursionTypeClass
import tourstApp.model.User
import tourstApp.model.Arrangement
import tourstApp.model.Excursion
dialect  "mvel"

rule "Check if at least two excursions with types from user's ExcursionTypes are found"
no-loop
when
    $user: User(destinations != null, !destinations.isEmpty(), excursionTypes != null, !excursionTypes.isEmpty())
    $arrangement: Arrangement(destination memberOf $user.destinations)
    $excursionCount: Number(intValue >= 2) from accumulate(
        Excursion(type memberOf $user.GetExcursionTypesFromClass()) from $arrangement.excursions,
        count(1)
    )
then
    $arrangement.setRecommended(true);
    update($arrangement);
end

//rule "Check if at least two excursions with types from user's ExcursionTypes are found"
//when
//    $user: User(destinations != null, !destinations.isEmpty(), excursionTypes != null, !excursionTypes.isEmpty())
//    $arrangement: Arrangement(destination memberOf $user.getDestinations())
//
//then
//
//    int excursionTypeCounter = 0;
//    for(Excursion excursion : $arrangement.getExcursions()){
//        if($user.GetExcursionTypesFromClass().contains(excursion.getType())){
//            excursionTypeCounter++;
//        }
//    }
//
//    if(excursionTypeCounter >=2){
//        $arrangement.setRecommended(true);
//    }
//
//end
