package unauthRules

import tourstApp.model.Reservation;
import tourstApp.model.Excursion;
import tourstApp.model.ExcursionType;
import tourstApp.model.Rating;
import tourstApp.model.Arrangement;
import tourstApp.model.RatingType;
import tourstApp.service.ArrangementService;
import tourstApp.util.Doubble;
import java.util.List;
import java.util.ArrayList;
import java.time.LocalDateTime;
import java.util.Random;

rule "Check if Arrangement is New"
    when
         $arrangement: Arrangement($date : date)
        $sixMonthsAgo: LocalDateTime() from (java.time.LocalDateTime.now().minusMonths(6))
        eval($date.isAfter($sixMonthsAgo))
    then
    modify($arrangement){setNew(true)};
    System.out.println("MODIFIED");
end

rule "Check if Arrangement is Popular"
    when
    $arrangement: Arrangement($ratings: ratings, Popular == false)
    eval($ratings.size() >= 1) //treba prepraviti na 20, za sada ovako radi lakseg testiranja
    then
    modify($arrangement){setPopular(true)};
end

rule "Check if Arrangement is Popular and New"
when
    $arrangement: Arrangement(New == true, $ratings: ratings, Popular == false)
    eval($ratings.size() > 0) //treba prepraviti na 10, za sada ovako radi lakseg testiranja
then
    modify($arrangement){setPopular(true)};
end

rule "Check if Arrangement is Neutral or Unrated"
no-loop true
when
    $arrangement: Arrangement(averageRating > 2.5, averageRating < 4.0 || numberOfRatings == null)
then
    $arrangement.setRatingType(RatingType.AVERAGE_RATING);
end

rule "Check if Arrangement is Well Rated"
no-loop true
when
    $arrangement: Arrangement(averageRating >= 4.0)
then
    $arrangement.setRatingType(RatingType.GOOD_RATING);
end

rule "Check if Arrangement is Poorly Rated"
no-loop true
when
    $arrangement: Arrangement(averageRating <= 2.5)
then
    $arrangement.setRatingType(RatingType.BAD_RATING);
end

rule "Recommend New Arrangement"
when
    $arrangement: Arrangement(New == true, Recommended == false)
then
    modify($arrangement){setRecommended(true)};
    System.out.println("New arrangement is recommended");
end

rule "Recommend Arrangement if Popular and Rated Well or Neutral"
salience -100
when
    $arrangement: Arrangement(Popular == true, averageRating >= 2.5, Recommended == false)
then
    modify($arrangement){setRecommended(true)};
    System.out.println("Arrangement is recommended because it is popular and has been rated well or neutrally");
end